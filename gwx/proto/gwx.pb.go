// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gwx.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 请求的数据
type GwxReq struct {
	ReqData              string   `protobuf:"bytes,1,opt,name=reqData,proto3" json:"reqData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GwxReq) Reset()         { *m = GwxReq{} }
func (m *GwxReq) String() string { return proto.CompactTextString(m) }
func (*GwxReq) ProtoMessage()    {}
func (*GwxReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_05b9e86bac5d7742, []int{0}
}

func (m *GwxReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GwxReq.Unmarshal(m, b)
}
func (m *GwxReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GwxReq.Marshal(b, m, deterministic)
}
func (m *GwxReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GwxReq.Merge(m, src)
}
func (m *GwxReq) XXX_Size() int {
	return xxx_messageInfo_GwxReq.Size(m)
}
func (m *GwxReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GwxReq.DiscardUnknown(m)
}

var xxx_messageInfo_GwxReq proto.InternalMessageInfo

func (m *GwxReq) GetReqData() string {
	if m != nil {
		return m.ReqData
	}
	return ""
}

// 返回的数据
type GwxRsp struct {
	RspData              string   `protobuf:"bytes,1,opt,name=rspData,proto3" json:"rspData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GwxRsp) Reset()         { *m = GwxRsp{} }
func (m *GwxRsp) String() string { return proto.CompactTextString(m) }
func (*GwxRsp) ProtoMessage()    {}
func (*GwxRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_05b9e86bac5d7742, []int{1}
}

func (m *GwxRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GwxRsp.Unmarshal(m, b)
}
func (m *GwxRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GwxRsp.Marshal(b, m, deterministic)
}
func (m *GwxRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GwxRsp.Merge(m, src)
}
func (m *GwxRsp) XXX_Size() int {
	return xxx_messageInfo_GwxRsp.Size(m)
}
func (m *GwxRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GwxRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GwxRsp proto.InternalMessageInfo

func (m *GwxRsp) GetRspData() string {
	if m != nil {
		return m.RspData
	}
	return ""
}

func init() {
	proto.RegisterType((*GwxReq)(nil), "proto.GwxReq")
	proto.RegisterType((*GwxRsp)(nil), "proto.GwxRsp")
}

func init() { proto.RegisterFile("gwx.proto", fileDescriptor_05b9e86bac5d7742) }

var fileDescriptor_05b9e86bac5d7742 = []byte{
	// 115 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2f, 0xaf, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x4a, 0x5c, 0x6c, 0xee, 0xe5, 0x15,
	0x41, 0xa9, 0x85, 0x42, 0x12, 0x5c, 0xec, 0x45, 0xa9, 0x85, 0x2e, 0x89, 0x25, 0x89, 0x12, 0x8c,
	0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0x2e, 0x4c, 0x4d, 0x71, 0x01, 0x58, 0x4d, 0x71, 0x01, 0x8a,
	0x1a, 0x08, 0xd7, 0x48, 0x8f, 0x8b, 0xd9, 0xbd, 0xbc, 0x42, 0x48, 0x9d, 0x8b, 0xd5, 0xbd, 0xbc,
	0xc2, 0x25, 0x5f, 0x88, 0x17, 0x62, 0x8d, 0x1e, 0xc4, 0x70, 0x29, 0x64, 0x6e, 0x71, 0x81, 0x12,
	0x43, 0x12, 0x1b, 0x98, 0x6f, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x1d, 0x32, 0xa8, 0x92,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GwxClient is the client API for Gwx service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GwxClient interface {
	// 发送数据执行动作函数
	GwxDo(ctx context.Context, in *GwxReq, opts ...grpc.CallOption) (*GwxRsp, error)
}

type gwxClient struct {
	cc *grpc.ClientConn
}

func NewGwxClient(cc *grpc.ClientConn) GwxClient {
	return &gwxClient{cc}
}

func (c *gwxClient) GwxDo(ctx context.Context, in *GwxReq, opts ...grpc.CallOption) (*GwxRsp, error) {
	out := new(GwxRsp)
	err := c.cc.Invoke(ctx, "/proto.Gwx/GwxDo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GwxServer is the server API for Gwx service.
type GwxServer interface {
	// 发送数据执行动作函数
	GwxDo(context.Context, *GwxReq) (*GwxRsp, error)
}

func RegisterGwxServer(s *grpc.Server, srv GwxServer) {
	s.RegisterService(&_Gwx_serviceDesc, srv)
}

func _Gwx_GwxDo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GwxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GwxServer).GwxDo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gwx/GwxDo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GwxServer).GwxDo(ctx, req.(*GwxReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gwx_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Gwx",
	HandlerType: (*GwxServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GwxDo",
			Handler:    _Gwx_GwxDo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gwx.proto",
}
